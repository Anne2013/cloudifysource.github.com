---
layout: default
title: Developing a custom cloud driver
category: Developer Guide
---

p. How to develop your custom Cloud Driver.

h1. The Cloud Driver Interface

The Cloud Driver Interface defines the methods for provisioning and installing the management virtual machines, the application virtual machines and getting Cloud information back.

* The {{setConfig}} method is called after the user invoked the {{bootstrap-cloud}} command from the Cloudify shell, loading the configuration file and preparing the Cloud Driver configuration {{Map}}
* The {{bootstrapCloud}} method succeeds the {{setConfig}} method; provisions the Cloudify management VM and installs the different Cloudify management services on that VM(s)
* The {{startMachine}} method called by the ESM when a new service needs to be installed, will provision a new VM and install the Clodify agent on this VM, returning the VM details
* The {{stopMachine}} method called by the ESM when a service needs to be shutdown or when a node needs to be moved to a larger machine etc, will shutdown and terminate the VM specified.
* The {{teardownCloud}} method will be shutting down and terminating any VM associated with the current Cloudify installation, once the user invoked the {{teardown-cloud}} from the Shell. 


p. <script src="https://gist.github.com/1744993.js?file=CloudifyProvisioning.java"></script>

h1. The Cloud Driver Configuration DSL File

The Cloud Driver configuration file describes a particular configuration for the specific cloud vendor with several sub-sections:
* Configuration section that holds the management machine template name ans some other general configuration attributes
* Provider section describes the different attributes needed for the cloud driver to upload files from the shell to the cloud, accessing the management VMs etc.
* User section that describes the security credentials required for Cloudify to access the cloud API
* Templates section which is a map of VM template aliases mapped to their configurations. A template is a set of attributes the cloud driver needs to locate the suitable image to use and the machine HW to provision. Users reference the template aliases in the service recipe in order to get the required SW and HW from the cloud without addressing a specific Cloud API or terminology.
* Custom section is used by the developer of the cloud driver to add any set of custom attributes


<br/>Here is an example of ec2-cloud.groovy (For Amazon EC2 cloud with placeholders): 
<script src="https://gist.github.com/1722422.js?file=ec2-cloud.groovy"></script>


h2. Packaging it all into a Cloud Plugin

     TBD

h2. Adding a Plugin Folder

     TBD

h2. Packing the Cloud Driver to a jar

     TBD

h2. Placing the Cloud Driver Config File

     TBD

