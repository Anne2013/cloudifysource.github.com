---
layout: default
title: Anatomy of a Recipe
category: Developing Recipes
publish: true
abstract: An overview of the recipe framework, terminology and syntax
pageord: 1
---

This topic provides an overview of the recipe framework, terminology, and syntax.

h2. Basic Concepts

* Cloudify is designed to onboard and manage *applications*
* An *application* is a set of *services*, and each *service* is a cluster of service instances that make-up an *application tier* (e.g. cluster of Tomcats service instances)
* An *application recipe* defines the application name, the services it requires and their interdependencies
* Each *service* is installed, managed, and monitored by a *service recipe*
* A *service recipe* defines the following:
** General configuration: The service name, service type, number of service instances, and the service icon filename
** Compute: Hardware and software requirements
** "Lifecycle events":/guide/developing/lifecycle_events: Maps events to handling scripts or closures and, as such, is the most important part of the service recipe
** Custom commands: Maps custom events to handling scripts that can be invoked as commands using the Cloudify shell
** Plugins: Liveness and Monitoring plugins
** UI layout: The layout for the collected metrics to display in Cloudify's web management console
h4(info). Future releases will also support *provided services* (where the application tier is only monitored for availability)

h2. Overview

Application recipes are the execution plans for installing, starting, orchestrating, and monitoring your application stack without changing the application's code or architecture. Cloudify uses the following recipes types:

|_. Recipe type |_. Description |
| Application | An application recipe is comprised of the application descriptor file and the recipes for the services it requires. |
| Service | Each service recipe is comprised of the service descriptor file, handler scripts, optional monitoring plugins, an optional service icon file, and an optional recipe parameter file. |

To deploy an application you need a single application recipe that uses one or more service recipes to provision the services it requires. All the files that comprise the application recipe are stored in the application recipe folder.
!/guide/images/recipes/recipe_ingrid.png!

The following diagram depicts the application's recipe folder structure.
!/guide/images/recipes/recipe_folder.png!