---
layout: default
title: The Service Context API
category: Developing Recipes
publish: true
abstract: Describes the Service Context API, which is Cloudify's API for interacting with an applications service's runtime environment and context
pageord: 7

---

h1. The Service Context API

The Service Context API provides means to access other Application Services or other Service Nodes from within a lifecycle script.


h1. Gaining access to the Service Context API

The ServiceContext API is accessed using the __ServiceContextFactory__:
<script src="https://gist.github.com/1700385.js?file=getServiceContext.groovy"></script>


Now, you can access any Application service by name, using the __waitForService__ Method:
<script src="https://gist.github.com/1700450.js?file=wait4Cassandra.groovy"></script>

The __current__ service - the service in which the above code would be running - can be accessed using __context.serviceName__.

h1. The Service Methods

The __Service__ object has the following methods:
<script src="https://gist.github.com/1700479.js?file=serviceMethods.groovy"></script>

h1. The Service Instance Methods

The __ServiceInstance__ object can be referenced from the __Service__ object using __getInstances()__.

To find out the current instance Id, use __context.getInstanceId()__.

The _ServiceInstance__ object provides the following methods:
<script src="https://gist.github.com/1703676.js?file=serviceInstanceMethods.groovy"></script>

h1. Writing and Reading Runtime Attributes

Cloudify enables the user to exchange information between different contexts such as Application, Service and Service Instance, using the Attributes API.
You can read more about it "here(Service Attributes API)":/guide/developing/attributes_api




