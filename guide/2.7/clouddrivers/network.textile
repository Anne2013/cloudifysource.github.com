---
layout: default
title: Network
category: Developing Cloud Drivers
publish: true
abstract: Cloudify Network Support
pageord: 900
---
h3. Overview

Cloudify 2.7 provides network abstraction to allow applications to define and create their network topology as part
of the application deployment.

Currently, Cloudify offers network implementation for OpenStack using the Neutron API and the
corresponding attributes in Nova API.

Users who wish to have custom implementations can refer to the custom Cloud Driver guide //link here

h3. Use cases

Cloudify supported network use cases includes:

h5. Support for Virtual Networks


* Dynamic Bootsrapping - Creating a Cloudify management network to which the Cloudify Managers are bind as well as Cloudify agents (using a dedicated vNIC)
this use case provides separation of management networking from application networking. In this use case the bootstrap process uses the network cloud driver to create a network and a router that binds the internal network to the external network
in order to provide internet connectivity for the REST and GUI endpoints.

* Static Bootstrapping - Binding the manager and agents to an exisitng intenral network. In this scenario the user provision the network manually and configure cloudify to use it

* Dynamic Application Network Provisioning - Cloudify creates an applicative network according to the configuration and bind the application services to this network (as well as to the management network)

* Static Application Network Binding - Cloudify binds the application VMs to pre-provisioned netwoks according to the list specified in each service compute template

h5. Support for Security Groups

In addition to the above the network Cloud Drvier provides support for Neutron Security Groups.
* Management Security Groups - The driver creates several security groups (see below) for the managers and for the agents-manager communications
* Application Services Security Groups - The recipe DSL allows the user to define access rules per service. Cloudify Cloud Driver use these rules to create security groups and bind the service VMs to these groups

h5. Support for Floating IPs

Cloudify Network Cloud Driver provides API for working with floating IPs. This means the recipe lifecycle events can use floating IPs programmatically
* Allocate Floating IPs 
* Associate a Floating IP with a VM
* Detach the Floating IP from the VM (for example in case of fail-over and auto-healing)
* Terminate a Floating IP

h3. Cloudify Management Network Topology

The image below depicts the management network topology. It includes the following objects:
* L2 Network with a single L3 Subnet to which all managers and agents bind via vNIC
* vRouter that connects the external network to the management network to allow for access from / to the internet
* Floating IP for each of the managers
* Management security group that allows for manager to manager communications as well as for REST and GUI communications
* Agents security group that allows for manager to agent and vice versa communication

<img src="../../images/clouddrivers/mng_network_topology.jpg"/>

h5. Configuring the Management Network and Security Groups

The Management Network Configuration is done in the Cloud Driver configuration file. The following snippets demonstrate the configuration options

**snippet1**
<script src="https://gist.github.com/tamirko/8040601.js"></script>

The following configuration options are availabel:


h3. Defining the Application Network Topology

As mentioned above the cloud driver allows for networks creation and network binding to VMs vNICs (each VM can have several vNICs)

There are 2 main scenarios:
* Dynamic Scenario where the cloud driver create the networks based on configuration block in the Cloud Driver configuration.
* Static Scenario where the cloud driver just binds existing networks to the application VMs using configurations specified in the compute tempaltes in the Cloud Driver configuration

h5. Application Network Configuration


The below snippet demonstrates how to configure application networks
**snippet2**
<script src="https://gist.github.com/tamirko/8040538.js"></script>

Once these network had been created or had been discovered by the driver, it will bind the application VMs using the extended compute template

**snippet3**
<script src="https://gist.github.com/tamirko/8040538.js"></script>

h3. Creating Service Security Rules

In version 2.7 additional recipe DSL allows for Security Rules definitions
Both inbound and outbound rules are supported.

<script src="https://gist.github.com/tamirko/b5e044fe4e8e2b572c61.js"></script>

The rules refer to the scope of the access list using the following scope types


There are the levels of rules (aka types):
<script src="https://gist.github.com/tamirko/8037206.js"></script>

h3. Working with Floating IPs API
Cloudify 2.7 allows to work with OpenStack floating IPs (or with other clouds using your custom implementation) 
The following methods are available from the recipe:








