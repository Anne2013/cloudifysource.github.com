---
layout: default
title: The Application Recipe
category: Developing Recipes
publish: true
abstract: Describes the part of the recipe that describes which application services your application requires and their interdependencies
pageord: 2
---

An application recipe is comprised of the application descriptor file and the recipes for the services it requires. This topic provides information about the application descriptor file.

h4(warn). The application descriptor file must be located in the root of the appllication's recipe folder.

The file describes the application name, the services it requires and their interdependencies. The dependency means that Cloudify will not trigger the start lifecycle event of the dependent service until the services on which it depends have successfully started.

The application name is used to identify the application by the various Cloudify management and monitoring tools. Therefore, the name must be unique across all applications that are managed by the same Cloudify controller.

The following shows an example application descriptor file:
<script src="https://gist.github.com/1759968.js?file=app_recipe.groovy"></script>

h3. Application and Services Properties

In order to make Cloudify recipes flexible and configurable, you can use the application level properties file (which can take groovy statements as values).

The properties file should be named according to the following convention: 
  *_@applicationName-application.properties@_* 

Any property in the properties file, should be unique since its value will be used with any occurrence of this key in the application recipe and all the corresponding service recipes.

At runtime you can override any of these values using the overrides flag with a properties file, as described "here":../recipe/command_line_reference#install_app.

h4. Usage Example

Assuming that : 
# Your application is called myApp
# The myApp recipe is comprised of two services :Tomcat and MySQL
# myApp-application.properties contains the following: _@databasePort=3306@_

The _@databasePort@_ is common to all the service instances in the myApp application. It is known by both the Tomcat service and by the MySQL service, thus users (in this case) are not bound to accessing the service context nor do they need to store this data (db port) in it.



