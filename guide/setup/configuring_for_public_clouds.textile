---
layout: default
title: Configuring for Public Clouds
category: Installation & Setup
publish: true
abstract: Explains how to Configure Cloudify to run your application on public clouds
pageord: 3
---

h1. Configuring for public clouds
 
One of the best things about Cloudify is that you don't need to change your recipe at all when you want to switch between public cloud providers, nor do you have to install anything on "your" cloud prior to using Cloudify.
Regardless of the public cloud provider (Amazon EC2, to Microst Azure etc.), your recipe remains the same.

p. The following is *irrelevant* for Azure. "Click here":/guide/setup/installing_azure for more information about on-boarding to Azure.

In order for Cloudify to help you meet your needs, you need to give us an additional information such as :
* Where should the Cloudify binaries be retrieved from.
* The prefix name for each of your machine(a separate one for managment and for instances machines).
* You credentials in the Cloud
* Declarations and definitions of templates that your recipe uses.
  These templates contain the type of hardware (according to your cloud's api) that you need for each of your required machines.
  You can later specify them in your recipe's compute section.


All the above information needs to be specified in the &lt;CLOUD-PROVIDER&gt;-cloud.groovy file which is located (or created by you and placed) in &lt;Cloudify Root&gt;/tools/cli/plugins/esc/CLOUD-PROVIDER.

If the deployment on your public cloud provider requires a key pair file, you need to create one and place that file in &lt;Cloudify Root&gt;/tools/cli/plugins/esc/CLOUD-PROVIDER/upload folder.



 Here's an example of ec2-cloud.groovy (For Amazon EC2 cloud with placeholders): 

<script src="https://gist.github.com/1722422.js?file=ec2-cloud.groovy"></script>

 *"Click here":/guide/bootstrapping/bootstrapping_ec2* for more information on Bootstrapping on EC2. 








